##
# terraform.tfvars.example
# Copy this file to terraform.tfvars and customize for your needs
##

# Example repository configuration with file management
repositories = {
  "terraform-k8s-cluster" = {
    name                 = "terraform-k8s-cluster"
    description          = "Terraform configuration for Kubernetes cluster"
    repository_auto_init = true
    branch_deletion      = true
    main_branch          = "main"
    additional_branches  = ["develop"]
    topics               = ["terraform", "kubernetes", "infrastructure"]

    # Repository files will be added AFTER repository creation
    manage_files = true

    # Optional: Advanced settings
    allow_auto_merge                = false
    required_status_checks          = ["ci/terraform-validate", "ci/terraform-plan"]
    required_approving_review_count = 1
    dismissal_restrictions          = []
    pull_request_bypassers          = []
  }

  "shell-scripts" = {
    name                 = "shell-scripts"
    description          = "Collection of useful shell scripts"
    repository_auto_init = true
    branch_deletion      = true
    main_branch          = "main"
    additional_branches  = []
    topics               = ["bash", "shell", "scripts", "automation"]

    # Skip file management for this repository
    manage_files = false
  }
}

# Example: Repository with comprehensive file management
  "example-full-repo" = {
    name                 = "example-full-repo"
    description          = "Example repository with all features"
    repository_auto_init = true
    branch_deletion      = true
    main_branch          = "main"
    additional_branches  = ["develop", "staging"]
    topics               = ["example", "template"]

    # Files will be added with proper dependency ordering:
    # 1. Repository created first
    # 2. Branch protection rules applied
    # 3. Repository files added last
    manage_files = true

    allow_auto_merge                = true
    required_status_checks          = ["ci/build", "ci/test", "ci/security-scan"]
    required_approving_review_count = 2
    dismissal_restrictions          = []
    pull_request_bypassers          = []
  }

# Additional tags for resources (optional)
tags = {
  Environment = "production"
  ManagedBy   = "terraform"
  Owner       = "platform-team"
}

# GitHub token should be set as environment variable GH_TOKEN
# github_token = "your-github-token"  # Not recommended - use environment variable instead
